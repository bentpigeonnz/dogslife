// lib/main.dart

import 'package:flutter/material.dart';
import 'package:hooks_riverpod/hooks_riverpod.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:flutter_dotenv/flutter_dotenv.dart';
import 'firebase_options.dart'; // ← Generated by FlutterFire CLI
import 'core/themes/app_theme.dart';
import 'core/providers/theme_provider.dart';
import 'router.dart'; // ← Your GoRouter config

Future<void> main() async {
  WidgetsFlutterBinding.ensureInitialized();

  // Load environment variables (like API keys)
  await dotenv.load(fileName: ".env");

  // Initialize Firebase (using generated options from FlutterFire CLI)
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );

  // Start the app using Riverpod's ProviderScope
  runApp(const ProviderScope(child: DogsLifeApp()));
}

/// Main app widget using Riverpod ConsumerWidget for reactive state
class DogsLifeApp extends ConsumerWidget {
  const DogsLifeApp({super.key});

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    // Watch the theme provider (will be light/dark/system)
    final themeMode = ref.watch(themeModeProvider);

    return MaterialApp.router(
      title: 'dogsLife',
      debugShowCheckedModeBanner: false,
      theme: AppTheme.light,         // See core/themes/app_theme.dart
      darkTheme: AppTheme.dark,
      themeMode: themeMode,
      routerConfig: appRouter,       // See router.dart
      // You can add locale, scrollBehavior, builder, etc here later
    );
  }
}
